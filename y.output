Terminals unused in grammar

   DO
   CHAR
   DOUBLE
   CONTINUE
   '+'
   '-'
   '*'
   '/'


Grammar

    0 $accept: start $end

    1 start: program

    2 program: program unit
    3        | unit

    4 unit: var_declaration
    5     | func_declaration
    6     | func_definition

    7 func_declaration: type_specifier ID LPAREN parameter_list RPAREN SEMICOLON

    8 $@1: %empty

    9 func_definition: type_specifier ID LPAREN parameter_list RPAREN $@1 compound_statement

   10 parameter_list: parameters
   11               | %empty

   12 parameters: parameters COMMA type_specifier ID
   13           | parameters COMMA type_specifier
   14           | type_specifier ID
   15           | type_specifier

   16 compound_statement: LCURL statements RCURL
   17                   | LCURL RCURL

   18 var_declaration: type_specifier declaration_list SEMICOLON

   19 type_specifier: INT
   20               | FLOAT
   21               | VOID

   22 declaration_list: declaration_list COMMA ID
   23                 | declaration_list COMMA ID LTHIRD CONST_INT RTHIRD
   24                 | ID
   25                 | ID LTHIRD CONST_INT RTHIRD

   26 statements: statement
   27           | statements statement

   28 statement: var_declaration
   29          | expression_statement

   30 $@2: %empty

   31 statement: $@2 compound_statement
   32          | FOR LPAREN expression_statement expression_statement expression RPAREN statement
   33          | IF LPAREN expression RPAREN statement
   34          | IF LPAREN expression RPAREN statement ELSE statement
   35          | WHILE LPAREN expression RPAREN statement
   36          | PRINTLN LPAREN ID RPAREN SEMICOLON
   37          | RETURN expression SEMICOLON
   38          | RETURN SEMICOLON error

   39 expression_statement: SEMICOLON
   40                     | expression SEMICOLON

   41 variable: ID
   42         | ID LTHIRD expression RTHIRD

   43 expression: logic_expression
   44           | variable ASSIGNOP logic_expression

   45 logic_expression: rel_expression
   46                 | rel_expression LOGICOP rel_expression

   47 rel_expression: simple_expression
   48               | simple_expression RELOP simple_expression

   49 simple_expression: term
   50                  | simple_expression ADDOP term

   51 term: unary_expression
   52     | term MULOP unary_expression

   53 unary_expression: ADDOP unary_expression
   54                 | NOT unary_expression
   55                 | factor

   56 factor: variable
   57       | ID LPAREN argument_list RPAREN
   58       | LPAREN expression RPAREN
   59       | CONST_INT
   60       | CONST_FLOAT
   61       | CONST_CHAR
   62       | variable INCOP
   63       | variable DECOP

   64 argument_list: arguments
   65              | %empty

   66 arguments: arguments COMMA logic_expression
   67          | logic_expression


Terminals, with rules where they appear

$end (0) 0
'*' (42)
'+' (43)
'-' (45)
'/' (47)
error (256) 38
CONST_INT (258) 23 25 59
CONST_FLOAT (259) 60
CONST_CHAR (260) 61
ID (261) 7 9 12 14 22 23 24 25 36 41 42 57
INCOP (262) 62
DECOP (263) 63
MULOP (264) 52
ADDOP (265) 50 53
RELOP (266) 48
LOGICOP (267) 46
ASSIGNOP (268) 44
LPAREN (269) 7 9 32 33 34 35 36 57 58
RPAREN (270) 7 9 32 33 34 35 36 57 58
RTHIRD (271) 23 25 42
LTHIRD (272) 23 25 42
LCURL (273) 16 17
RCURL (274) 16 17
COMMA (275) 12 13 22 23 66
SEMICOLON (276) 7 18 36 37 38 39 40
NOT (277) 54
IF (278) 33 34
ELSE (279) 34
FOR (280) 32
WHILE (281) 35
DO (282)
INT (283) 19
CHAR (284)
FLOAT (285) 20
DOUBLE (286)
VOID (287) 21
RETURN (288) 37 38
PRINTLN (289) 36
CONTINUE (290)
LOWER_THAN_ELSE (291)


Nonterminals, with rules where they appear

$accept (41)
    on left: 0
start (42)
    on left: 1, on right: 0
program (43)
    on left: 2 3, on right: 1 2
unit (44)
    on left: 4 5 6, on right: 2 3
func_declaration (45)
    on left: 7, on right: 5
func_definition (46)
    on left: 9, on right: 6
$@1 (47)
    on left: 8, on right: 9
parameter_list (48)
    on left: 10 11, on right: 7 9
parameters (49)
    on left: 12 13 14 15, on right: 10 12 13
compound_statement (50)
    on left: 16 17, on right: 9 31
var_declaration (51)
    on left: 18, on right: 4 28
type_specifier (52)
    on left: 19 20 21, on right: 7 9 12 13 14 15 18
declaration_list (53)
    on left: 22 23 24 25, on right: 18 22 23
statements (54)
    on left: 26 27, on right: 16 27
statement (55)
    on left: 28 29 31 32 33 34 35 36 37 38, on right: 26 27 32 33 34
    35
$@2 (56)
    on left: 30, on right: 31
expression_statement (57)
    on left: 39 40, on right: 29 32
variable (58)
    on left: 41 42, on right: 44 56 62 63
expression (59)
    on left: 43 44, on right: 32 33 34 35 37 40 42 58
logic_expression (60)
    on left: 45 46, on right: 43 44 66 67
rel_expression (61)
    on left: 47 48, on right: 45 46
simple_expression (62)
    on left: 49 50, on right: 47 48 50
term (63)
    on left: 51 52, on right: 49 50 52
unary_expression (64)
    on left: 53 54 55, on right: 51 52 53 54
factor (65)
    on left: 56 57 58 59 60 61 62 63, on right: 55
argument_list (66)
    on left: 64 65, on right: 57
arguments (67)
    on left: 66 67, on right: 64 66


State 0

    0 $accept: . start $end

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    start             go to state 4
    program           go to state 5
    unit              go to state 6
    func_declaration  go to state 7
    func_definition   go to state 8
    var_declaration   go to state 9
    type_specifier    go to state 10


State 1

   19 type_specifier: INT .

    $default  reduce using rule 19 (type_specifier)


State 2

   20 type_specifier: FLOAT .

    $default  reduce using rule 20 (type_specifier)


State 3

   21 type_specifier: VOID .

    $default  reduce using rule 21 (type_specifier)


State 4

    0 $accept: start . $end

    $end  shift, and go to state 11


State 5

    1 start: program .
    2 program: program . unit

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    $default  reduce using rule 1 (start)

    unit              go to state 12
    func_declaration  go to state 7
    func_definition   go to state 8
    var_declaration   go to state 9
    type_specifier    go to state 10


State 6

    3 program: unit .

    $default  reduce using rule 3 (program)


State 7

    5 unit: func_declaration .

    $default  reduce using rule 5 (unit)


State 8

    6 unit: func_definition .

    $default  reduce using rule 6 (unit)


State 9

    4 unit: var_declaration .

    $default  reduce using rule 4 (unit)


State 10

    7 func_declaration: type_specifier . ID LPAREN parameter_list RPAREN SEMICOLON
    9 func_definition: type_specifier . ID LPAREN parameter_list RPAREN $@1 compound_statement
   18 var_declaration: type_specifier . declaration_list SEMICOLON

    ID  shift, and go to state 13

    declaration_list  go to state 14


State 11

    0 $accept: start $end .

    $default  accept


State 12

    2 program: program unit .

    $default  reduce using rule 2 (program)


State 13

    7 func_declaration: type_specifier ID . LPAREN parameter_list RPAREN SEMICOLON
    9 func_definition: type_specifier ID . LPAREN parameter_list RPAREN $@1 compound_statement
   24 declaration_list: ID .
   25                 | ID . LTHIRD CONST_INT RTHIRD

    LPAREN  shift, and go to state 15
    LTHIRD  shift, and go to state 16

    $default  reduce using rule 24 (declaration_list)


State 14

   18 var_declaration: type_specifier declaration_list . SEMICOLON
   22 declaration_list: declaration_list . COMMA ID
   23                 | declaration_list . COMMA ID LTHIRD CONST_INT RTHIRD

    COMMA      shift, and go to state 17
    SEMICOLON  shift, and go to state 18


State 15

    7 func_declaration: type_specifier ID LPAREN . parameter_list RPAREN SEMICOLON
    9 func_definition: type_specifier ID LPAREN . parameter_list RPAREN $@1 compound_statement

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    $default  reduce using rule 11 (parameter_list)

    parameter_list  go to state 19
    parameters      go to state 20
    type_specifier  go to state 21


State 16

   25 declaration_list: ID LTHIRD . CONST_INT RTHIRD

    CONST_INT  shift, and go to state 22


State 17

   22 declaration_list: declaration_list COMMA . ID
   23                 | declaration_list COMMA . ID LTHIRD CONST_INT RTHIRD

    ID  shift, and go to state 23


State 18

   18 var_declaration: type_specifier declaration_list SEMICOLON .

    $default  reduce using rule 18 (var_declaration)


State 19

    7 func_declaration: type_specifier ID LPAREN parameter_list . RPAREN SEMICOLON
    9 func_definition: type_specifier ID LPAREN parameter_list . RPAREN $@1 compound_statement

    RPAREN  shift, and go to state 24


State 20

   10 parameter_list: parameters .
   12 parameters: parameters . COMMA type_specifier ID
   13           | parameters . COMMA type_specifier

    COMMA  shift, and go to state 25

    $default  reduce using rule 10 (parameter_list)


State 21

   14 parameters: type_specifier . ID
   15           | type_specifier .

    ID  shift, and go to state 26

    $default  reduce using rule 15 (parameters)


State 22

   25 declaration_list: ID LTHIRD CONST_INT . RTHIRD

    RTHIRD  shift, and go to state 27


State 23

   22 declaration_list: declaration_list COMMA ID .
   23                 | declaration_list COMMA ID . LTHIRD CONST_INT RTHIRD

    LTHIRD  shift, and go to state 28

    $default  reduce using rule 22 (declaration_list)


State 24

    7 func_declaration: type_specifier ID LPAREN parameter_list RPAREN . SEMICOLON
    9 func_definition: type_specifier ID LPAREN parameter_list RPAREN . $@1 compound_statement

    SEMICOLON  shift, and go to state 29

    $default  reduce using rule 8 ($@1)

    $@1  go to state 30


State 25

   12 parameters: parameters COMMA . type_specifier ID
   13           | parameters COMMA . type_specifier

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    type_specifier  go to state 31


State 26

   14 parameters: type_specifier ID .

    $default  reduce using rule 14 (parameters)


State 27

   25 declaration_list: ID LTHIRD CONST_INT RTHIRD .

    $default  reduce using rule 25 (declaration_list)


State 28

   23 declaration_list: declaration_list COMMA ID LTHIRD . CONST_INT RTHIRD

    CONST_INT  shift, and go to state 32


State 29

    7 func_declaration: type_specifier ID LPAREN parameter_list RPAREN SEMICOLON .

    $default  reduce using rule 7 (func_declaration)


State 30

    9 func_definition: type_specifier ID LPAREN parameter_list RPAREN $@1 . compound_statement

    LCURL  shift, and go to state 33

    compound_statement  go to state 34


State 31

   12 parameters: parameters COMMA type_specifier . ID
   13           | parameters COMMA type_specifier .

    ID  shift, and go to state 35

    $default  reduce using rule 13 (parameters)


State 32

   23 declaration_list: declaration_list COMMA ID LTHIRD CONST_INT . RTHIRD

    RTHIRD  shift, and go to state 36


State 33

   16 compound_statement: LCURL . statements RCURL
   17                   | LCURL . RCURL

    CONST_INT    shift, and go to state 37
    CONST_FLOAT  shift, and go to state 38
    CONST_CHAR   shift, and go to state 39
    ID           shift, and go to state 40
    ADDOP        shift, and go to state 41
    LPAREN       shift, and go to state 42
    RCURL        shift, and go to state 43
    SEMICOLON    shift, and go to state 44
    NOT          shift, and go to state 45
    IF           shift, and go to state 46
    FOR          shift, and go to state 47
    WHILE        shift, and go to state 48
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 49
    PRINTLN      shift, and go to state 50

    $default  reduce using rule 30 ($@2)

    var_declaration       go to state 51
    type_specifier        go to state 52
    statements            go to state 53
    statement             go to state 54
    $@2                   go to state 55
    expression_statement  go to state 56
    variable              go to state 57
    expression            go to state 58
    logic_expression      go to state 59
    rel_expression        go to state 60
    simple_expression     go to state 61
    term                  go to state 62
    unary_expression      go to state 63
    factor                go to state 64


State 34

    9 func_definition: type_specifier ID LPAREN parameter_list RPAREN $@1 compound_statement .

    $default  reduce using rule 9 (func_definition)


State 35

   12 parameters: parameters COMMA type_specifier ID .

    $default  reduce using rule 12 (parameters)


State 36

   23 declaration_list: declaration_list COMMA ID LTHIRD CONST_INT RTHIRD .

    $default  reduce using rule 23 (declaration_list)


State 37

   59 factor: CONST_INT .

    $default  reduce using rule 59 (factor)


State 38

   60 factor: CONST_FLOAT .

    $default  reduce using rule 60 (factor)


State 39

   61 factor: CONST_CHAR .

    $default  reduce using rule 61 (factor)


State 40

   41 variable: ID .
   42         | ID . LTHIRD expression RTHIRD
   57 factor: ID . LPAREN argument_list RPAREN

    LPAREN  shift, and go to state 65
    LTHIRD  shift, and go to state 66

    $default  reduce using rule 41 (variable)


State 41

   53 unary_expression: ADDOP . unary_expression

    CONST_INT    shift, and go to state 37
    CONST_FLOAT  shift, and go to state 38
    CONST_CHAR   shift, and go to state 39
    ID           shift, and go to state 40
    ADDOP        shift, and go to state 41
    LPAREN       shift, and go to state 42
    NOT          shift, and go to state 45

    variable          go to state 67
    unary_expression  go to state 68
    factor            go to state 64


State 42

   58 factor: LPAREN . expression RPAREN

    CONST_INT    shift, and go to state 37
    CONST_FLOAT  shift, and go to state 38
    CONST_CHAR   shift, and go to state 39
    ID           shift, and go to state 40
    ADDOP        shift, and go to state 41
    LPAREN       shift, and go to state 42
    NOT          shift, and go to state 45

    variable           go to state 57
    expression         go to state 69
    logic_expression   go to state 59
    rel_expression     go to state 60
    simple_expression  go to state 61
    term               go to state 62
    unary_expression   go to state 63
    factor             go to state 64


State 43

   17 compound_statement: LCURL RCURL .

    $default  reduce using rule 17 (compound_statement)


State 44

   39 expression_statement: SEMICOLON .

    $default  reduce using rule 39 (expression_statement)


State 45

   54 unary_expression: NOT . unary_expression

    CONST_INT    shift, and go to state 37
    CONST_FLOAT  shift, and go to state 38
    CONST_CHAR   shift, and go to state 39
    ID           shift, and go to state 40
    ADDOP        shift, and go to state 41
    LPAREN       shift, and go to state 42
    NOT          shift, and go to state 45

    variable          go to state 67
    unary_expression  go to state 70
    factor            go to state 64


State 46

   33 statement: IF . LPAREN expression RPAREN statement
   34          | IF . LPAREN expression RPAREN statement ELSE statement

    LPAREN  shift, and go to state 71


State 47

   32 statement: FOR . LPAREN expression_statement expression_statement expression RPAREN statement

    LPAREN  shift, and go to state 72


State 48

   35 statement: WHILE . LPAREN expression RPAREN statement

    LPAREN  shift, and go to state 73


State 49

   37 statement: RETURN . expression SEMICOLON
   38          | RETURN . SEMICOLON error

    CONST_INT    shift, and go to state 37
    CONST_FLOAT  shift, and go to state 38
    CONST_CHAR   shift, and go to state 39
    ID           shift, and go to state 40
    ADDOP        shift, and go to state 41
    LPAREN       shift, and go to state 42
    SEMICOLON    shift, and go to state 74
    NOT          shift, and go to state 45

    variable           go to state 57
    expression         go to state 75
    logic_expression   go to state 59
    rel_expression     go to state 60
    simple_expression  go to state 61
    term               go to state 62
    unary_expression   go to state 63
    factor             go to state 64


State 50

   36 statement: PRINTLN . LPAREN ID RPAREN SEMICOLON

    LPAREN  shift, and go to state 76


State 51

   28 statement: var_declaration .

    $default  reduce using rule 28 (statement)


State 52

   18 var_declaration: type_specifier . declaration_list SEMICOLON

    ID  shift, and go to state 77

    declaration_list  go to state 14


State 53

   16 compound_statement: LCURL statements . RCURL
   27 statements: statements . statement

    CONST_INT    shift, and go to state 37
    CONST_FLOAT  shift, and go to state 38
    CONST_CHAR   shift, and go to state 39
    ID           shift, and go to state 40
    ADDOP        shift, and go to state 41
    LPAREN       shift, and go to state 42
    RCURL        shift, and go to state 78
    SEMICOLON    shift, and go to state 44
    NOT          shift, and go to state 45
    IF           shift, and go to state 46
    FOR          shift, and go to state 47
    WHILE        shift, and go to state 48
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 49
    PRINTLN      shift, and go to state 50

    $default  reduce using rule 30 ($@2)

    var_declaration       go to state 51
    type_specifier        go to state 52
    statement             go to state 79
    $@2                   go to state 55
    expression_statement  go to state 56
    variable              go to state 57
    expression            go to state 58
    logic_expression      go to state 59
    rel_expression        go to state 60
    simple_expression     go to state 61
    term                  go to state 62
    unary_expression      go to state 63
    factor                go to state 64


State 54

   26 statements: statement .

    $default  reduce using rule 26 (statements)


State 55

   31 statement: $@2 . compound_statement

    LCURL  shift, and go to state 33

    compound_statement  go to state 80


State 56

   29 statement: expression_statement .

    $default  reduce using rule 29 (statement)


State 57

   44 expression: variable . ASSIGNOP logic_expression
   56 factor: variable .
   62       | variable . INCOP
   63       | variable . DECOP

    INCOP     shift, and go to state 81
    DECOP     shift, and go to state 82
    ASSIGNOP  shift, and go to state 83

    $default  reduce using rule 56 (factor)


State 58

   40 expression_statement: expression . SEMICOLON

    SEMICOLON  shift, and go to state 84


State 59

   43 expression: logic_expression .

    $default  reduce using rule 43 (expression)


State 60

   45 logic_expression: rel_expression .
   46                 | rel_expression . LOGICOP rel_expression

    LOGICOP  shift, and go to state 85

    $default  reduce using rule 45 (logic_expression)


State 61

   47 rel_expression: simple_expression .
   48               | simple_expression . RELOP simple_expression
   50 simple_expression: simple_expression . ADDOP term

    ADDOP  shift, and go to state 86
    RELOP  shift, and go to state 87

    $default  reduce using rule 47 (rel_expression)


State 62

   49 simple_expression: term .
   52 term: term . MULOP unary_expression

    MULOP  shift, and go to state 88

    $default  reduce using rule 49 (simple_expression)


State 63

   51 term: unary_expression .

    $default  reduce using rule 51 (term)


State 64

   55 unary_expression: factor .

    $default  reduce using rule 55 (unary_expression)


State 65

   57 factor: ID LPAREN . argument_list RPAREN

    CONST_INT    shift, and go to state 37
    CONST_FLOAT  shift, and go to state 38
    CONST_CHAR   shift, and go to state 39
    ID           shift, and go to state 40
    ADDOP        shift, and go to state 41
    LPAREN       shift, and go to state 42
    NOT          shift, and go to state 45

    $default  reduce using rule 65 (argument_list)

    variable           go to state 67
    logic_expression   go to state 89
    rel_expression     go to state 60
    simple_expression  go to state 61
    term               go to state 62
    unary_expression   go to state 63
    factor             go to state 64
    argument_list      go to state 90
    arguments          go to state 91


State 66

   42 variable: ID LTHIRD . expression RTHIRD

    CONST_INT    shift, and go to state 37
    CONST_FLOAT  shift, and go to state 38
    CONST_CHAR   shift, and go to state 39
    ID           shift, and go to state 40
    ADDOP        shift, and go to state 41
    LPAREN       shift, and go to state 42
    NOT          shift, and go to state 45

    variable           go to state 57
    expression         go to state 92
    logic_expression   go to state 59
    rel_expression     go to state 60
    simple_expression  go to state 61
    term               go to state 62
    unary_expression   go to state 63
    factor             go to state 64


State 67

   56 factor: variable .
   62       | variable . INCOP
   63       | variable . DECOP

    INCOP  shift, and go to state 81
    DECOP  shift, and go to state 82

    $default  reduce using rule 56 (factor)


State 68

   53 unary_expression: ADDOP unary_expression .

    $default  reduce using rule 53 (unary_expression)


State 69

   58 factor: LPAREN expression . RPAREN

    RPAREN  shift, and go to state 93


State 70

   54 unary_expression: NOT unary_expression .

    $default  reduce using rule 54 (unary_expression)


State 71

   33 statement: IF LPAREN . expression RPAREN statement
   34          | IF LPAREN . expression RPAREN statement ELSE statement

    CONST_INT    shift, and go to state 37
    CONST_FLOAT  shift, and go to state 38
    CONST_CHAR   shift, and go to state 39
    ID           shift, and go to state 40
    ADDOP        shift, and go to state 41
    LPAREN       shift, and go to state 42
    NOT          shift, and go to state 45

    variable           go to state 57
    expression         go to state 94
    logic_expression   go to state 59
    rel_expression     go to state 60
    simple_expression  go to state 61
    term               go to state 62
    unary_expression   go to state 63
    factor             go to state 64


State 72

   32 statement: FOR LPAREN . expression_statement expression_statement expression RPAREN statement

    CONST_INT    shift, and go to state 37
    CONST_FLOAT  shift, and go to state 38
    CONST_CHAR   shift, and go to state 39
    ID           shift, and go to state 40
    ADDOP        shift, and go to state 41
    LPAREN       shift, and go to state 42
    SEMICOLON    shift, and go to state 44
    NOT          shift, and go to state 45

    expression_statement  go to state 95
    variable              go to state 57
    expression            go to state 58
    logic_expression      go to state 59
    rel_expression        go to state 60
    simple_expression     go to state 61
    term                  go to state 62
    unary_expression      go to state 63
    factor                go to state 64


State 73

   35 statement: WHILE LPAREN . expression RPAREN statement

    CONST_INT    shift, and go to state 37
    CONST_FLOAT  shift, and go to state 38
    CONST_CHAR   shift, and go to state 39
    ID           shift, and go to state 40
    ADDOP        shift, and go to state 41
    LPAREN       shift, and go to state 42
    NOT          shift, and go to state 45

    variable           go to state 57
    expression         go to state 96
    logic_expression   go to state 59
    rel_expression     go to state 60
    simple_expression  go to state 61
    term               go to state 62
    unary_expression   go to state 63
    factor             go to state 64


State 74

   38 statement: RETURN SEMICOLON . error

    error  shift, and go to state 97


State 75

   37 statement: RETURN expression . SEMICOLON

    SEMICOLON  shift, and go to state 98


State 76

   36 statement: PRINTLN LPAREN . ID RPAREN SEMICOLON

    ID  shift, and go to state 99


State 77

   24 declaration_list: ID .
   25                 | ID . LTHIRD CONST_INT RTHIRD

    LTHIRD  shift, and go to state 16

    $default  reduce using rule 24 (declaration_list)


State 78

   16 compound_statement: LCURL statements RCURL .

    $default  reduce using rule 16 (compound_statement)


State 79

   27 statements: statements statement .

    $default  reduce using rule 27 (statements)


State 80

   31 statement: $@2 compound_statement .

    $default  reduce using rule 31 (statement)


State 81

   62 factor: variable INCOP .

    $default  reduce using rule 62 (factor)


State 82

   63 factor: variable DECOP .

    $default  reduce using rule 63 (factor)


State 83

   44 expression: variable ASSIGNOP . logic_expression

    CONST_INT    shift, and go to state 37
    CONST_FLOAT  shift, and go to state 38
    CONST_CHAR   shift, and go to state 39
    ID           shift, and go to state 40
    ADDOP        shift, and go to state 41
    LPAREN       shift, and go to state 42
    NOT          shift, and go to state 45

    variable           go to state 67
    logic_expression   go to state 100
    rel_expression     go to state 60
    simple_expression  go to state 61
    term               go to state 62
    unary_expression   go to state 63
    factor             go to state 64


State 84

   40 expression_statement: expression SEMICOLON .

    $default  reduce using rule 40 (expression_statement)


State 85

   46 logic_expression: rel_expression LOGICOP . rel_expression

    CONST_INT    shift, and go to state 37
    CONST_FLOAT  shift, and go to state 38
    CONST_CHAR   shift, and go to state 39
    ID           shift, and go to state 40
    ADDOP        shift, and go to state 41
    LPAREN       shift, and go to state 42
    NOT          shift, and go to state 45

    variable           go to state 67
    rel_expression     go to state 101
    simple_expression  go to state 61
    term               go to state 62
    unary_expression   go to state 63
    factor             go to state 64


State 86

   50 simple_expression: simple_expression ADDOP . term

    CONST_INT    shift, and go to state 37
    CONST_FLOAT  shift, and go to state 38
    CONST_CHAR   shift, and go to state 39
    ID           shift, and go to state 40
    ADDOP        shift, and go to state 41
    LPAREN       shift, and go to state 42
    NOT          shift, and go to state 45

    variable          go to state 67
    term              go to state 102
    unary_expression  go to state 63
    factor            go to state 64


State 87

   48 rel_expression: simple_expression RELOP . simple_expression

    CONST_INT    shift, and go to state 37
    CONST_FLOAT  shift, and go to state 38
    CONST_CHAR   shift, and go to state 39
    ID           shift, and go to state 40
    ADDOP        shift, and go to state 41
    LPAREN       shift, and go to state 42
    NOT          shift, and go to state 45

    variable           go to state 67
    simple_expression  go to state 103
    term               go to state 62
    unary_expression   go to state 63
    factor             go to state 64


State 88

   52 term: term MULOP . unary_expression

    CONST_INT    shift, and go to state 37
    CONST_FLOAT  shift, and go to state 38
    CONST_CHAR   shift, and go to state 39
    ID           shift, and go to state 40
    ADDOP        shift, and go to state 41
    LPAREN       shift, and go to state 42
    NOT          shift, and go to state 45

    variable          go to state 67
    unary_expression  go to state 104
    factor            go to state 64


State 89

   67 arguments: logic_expression .

    $default  reduce using rule 67 (arguments)


State 90

   57 factor: ID LPAREN argument_list . RPAREN

    RPAREN  shift, and go to state 105


State 91

   64 argument_list: arguments .
   66 arguments: arguments . COMMA logic_expression

    COMMA  shift, and go to state 106

    $default  reduce using rule 64 (argument_list)


State 92

   42 variable: ID LTHIRD expression . RTHIRD

    RTHIRD  shift, and go to state 107


State 93

   58 factor: LPAREN expression RPAREN .

    $default  reduce using rule 58 (factor)


State 94

   33 statement: IF LPAREN expression . RPAREN statement
   34          | IF LPAREN expression . RPAREN statement ELSE statement

    RPAREN  shift, and go to state 108


State 95

   32 statement: FOR LPAREN expression_statement . expression_statement expression RPAREN statement

    CONST_INT    shift, and go to state 37
    CONST_FLOAT  shift, and go to state 38
    CONST_CHAR   shift, and go to state 39
    ID           shift, and go to state 40
    ADDOP        shift, and go to state 41
    LPAREN       shift, and go to state 42
    SEMICOLON    shift, and go to state 44
    NOT          shift, and go to state 45

    expression_statement  go to state 109
    variable              go to state 57
    expression            go to state 58
    logic_expression      go to state 59
    rel_expression        go to state 60
    simple_expression     go to state 61
    term                  go to state 62
    unary_expression      go to state 63
    factor                go to state 64


State 96

   35 statement: WHILE LPAREN expression . RPAREN statement

    RPAREN  shift, and go to state 110


State 97

   38 statement: RETURN SEMICOLON error .

    $default  reduce using rule 38 (statement)


State 98

   37 statement: RETURN expression SEMICOLON .

    $default  reduce using rule 37 (statement)


State 99

   36 statement: PRINTLN LPAREN ID . RPAREN SEMICOLON

    RPAREN  shift, and go to state 111


State 100

   44 expression: variable ASSIGNOP logic_expression .

    $default  reduce using rule 44 (expression)


State 101

   46 logic_expression: rel_expression LOGICOP rel_expression .

    $default  reduce using rule 46 (logic_expression)


State 102

   50 simple_expression: simple_expression ADDOP term .
   52 term: term . MULOP unary_expression

    MULOP  shift, and go to state 88

    $default  reduce using rule 50 (simple_expression)


State 103

   48 rel_expression: simple_expression RELOP simple_expression .
   50 simple_expression: simple_expression . ADDOP term

    ADDOP  shift, and go to state 86

    $default  reduce using rule 48 (rel_expression)


State 104

   52 term: term MULOP unary_expression .

    $default  reduce using rule 52 (term)


State 105

   57 factor: ID LPAREN argument_list RPAREN .

    $default  reduce using rule 57 (factor)


State 106

   66 arguments: arguments COMMA . logic_expression

    CONST_INT    shift, and go to state 37
    CONST_FLOAT  shift, and go to state 38
    CONST_CHAR   shift, and go to state 39
    ID           shift, and go to state 40
    ADDOP        shift, and go to state 41
    LPAREN       shift, and go to state 42
    NOT          shift, and go to state 45

    variable           go to state 67
    logic_expression   go to state 112
    rel_expression     go to state 60
    simple_expression  go to state 61
    term               go to state 62
    unary_expression   go to state 63
    factor             go to state 64


State 107

   42 variable: ID LTHIRD expression RTHIRD .

    $default  reduce using rule 42 (variable)


State 108

   33 statement: IF LPAREN expression RPAREN . statement
   34          | IF LPAREN expression RPAREN . statement ELSE statement

    CONST_INT    shift, and go to state 37
    CONST_FLOAT  shift, and go to state 38
    CONST_CHAR   shift, and go to state 39
    ID           shift, and go to state 40
    ADDOP        shift, and go to state 41
    LPAREN       shift, and go to state 42
    SEMICOLON    shift, and go to state 44
    NOT          shift, and go to state 45
    IF           shift, and go to state 46
    FOR          shift, and go to state 47
    WHILE        shift, and go to state 48
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 49
    PRINTLN      shift, and go to state 50

    $default  reduce using rule 30 ($@2)

    var_declaration       go to state 51
    type_specifier        go to state 52
    statement             go to state 113
    $@2                   go to state 55
    expression_statement  go to state 56
    variable              go to state 57
    expression            go to state 58
    logic_expression      go to state 59
    rel_expression        go to state 60
    simple_expression     go to state 61
    term                  go to state 62
    unary_expression      go to state 63
    factor                go to state 64


State 109

   32 statement: FOR LPAREN expression_statement expression_statement . expression RPAREN statement

    CONST_INT    shift, and go to state 37
    CONST_FLOAT  shift, and go to state 38
    CONST_CHAR   shift, and go to state 39
    ID           shift, and go to state 40
    ADDOP        shift, and go to state 41
    LPAREN       shift, and go to state 42
    NOT          shift, and go to state 45

    variable           go to state 57
    expression         go to state 114
    logic_expression   go to state 59
    rel_expression     go to state 60
    simple_expression  go to state 61
    term               go to state 62
    unary_expression   go to state 63
    factor             go to state 64


State 110

   35 statement: WHILE LPAREN expression RPAREN . statement

    CONST_INT    shift, and go to state 37
    CONST_FLOAT  shift, and go to state 38
    CONST_CHAR   shift, and go to state 39
    ID           shift, and go to state 40
    ADDOP        shift, and go to state 41
    LPAREN       shift, and go to state 42
    SEMICOLON    shift, and go to state 44
    NOT          shift, and go to state 45
    IF           shift, and go to state 46
    FOR          shift, and go to state 47
    WHILE        shift, and go to state 48
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 49
    PRINTLN      shift, and go to state 50

    $default  reduce using rule 30 ($@2)

    var_declaration       go to state 51
    type_specifier        go to state 52
    statement             go to state 115
    $@2                   go to state 55
    expression_statement  go to state 56
    variable              go to state 57
    expression            go to state 58
    logic_expression      go to state 59
    rel_expression        go to state 60
    simple_expression     go to state 61
    term                  go to state 62
    unary_expression      go to state 63
    factor                go to state 64


State 111

   36 statement: PRINTLN LPAREN ID RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 116


State 112

   66 arguments: arguments COMMA logic_expression .

    $default  reduce using rule 66 (arguments)


State 113

   33 statement: IF LPAREN expression RPAREN statement .
   34          | IF LPAREN expression RPAREN statement . ELSE statement

    ELSE  shift, and go to state 117

    $default  reduce using rule 33 (statement)


State 114

   32 statement: FOR LPAREN expression_statement expression_statement expression . RPAREN statement

    RPAREN  shift, and go to state 118


State 115

   35 statement: WHILE LPAREN expression RPAREN statement .

    $default  reduce using rule 35 (statement)


State 116

   36 statement: PRINTLN LPAREN ID RPAREN SEMICOLON .

    $default  reduce using rule 36 (statement)


State 117

   34 statement: IF LPAREN expression RPAREN statement ELSE . statement

    CONST_INT    shift, and go to state 37
    CONST_FLOAT  shift, and go to state 38
    CONST_CHAR   shift, and go to state 39
    ID           shift, and go to state 40
    ADDOP        shift, and go to state 41
    LPAREN       shift, and go to state 42
    SEMICOLON    shift, and go to state 44
    NOT          shift, and go to state 45
    IF           shift, and go to state 46
    FOR          shift, and go to state 47
    WHILE        shift, and go to state 48
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 49
    PRINTLN      shift, and go to state 50

    $default  reduce using rule 30 ($@2)

    var_declaration       go to state 51
    type_specifier        go to state 52
    statement             go to state 119
    $@2                   go to state 55
    expression_statement  go to state 56
    variable              go to state 57
    expression            go to state 58
    logic_expression      go to state 59
    rel_expression        go to state 60
    simple_expression     go to state 61
    term                  go to state 62
    unary_expression      go to state 63
    factor                go to state 64


State 118

   32 statement: FOR LPAREN expression_statement expression_statement expression RPAREN . statement

    CONST_INT    shift, and go to state 37
    CONST_FLOAT  shift, and go to state 38
    CONST_CHAR   shift, and go to state 39
    ID           shift, and go to state 40
    ADDOP        shift, and go to state 41
    LPAREN       shift, and go to state 42
    SEMICOLON    shift, and go to state 44
    NOT          shift, and go to state 45
    IF           shift, and go to state 46
    FOR          shift, and go to state 47
    WHILE        shift, and go to state 48
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 49
    PRINTLN      shift, and go to state 50

    $default  reduce using rule 30 ($@2)

    var_declaration       go to state 51
    type_specifier        go to state 52
    statement             go to state 120
    $@2                   go to state 55
    expression_statement  go to state 56
    variable              go to state 57
    expression            go to state 58
    logic_expression      go to state 59
    rel_expression        go to state 60
    simple_expression     go to state 61
    term                  go to state 62
    unary_expression      go to state 63
    factor                go to state 64


State 119

   34 statement: IF LPAREN expression RPAREN statement ELSE statement .

    $default  reduce using rule 34 (statement)


State 120

   32 statement: FOR LPAREN expression_statement expression_statement expression RPAREN statement .

    $default  reduce using rule 32 (statement)
